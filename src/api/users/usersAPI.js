import instance from '../instance';

// API –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏
export const usersAPI = {
    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    async getProfile() {
        try {
            const response = await instance.get('/users/profile/');
            return response.data;
        } catch (error) {
            // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –∑'—î–¥–Ω–∞–Ω–Ω—è
            if (error.code === 'ERR_NETWORK' || error.message === 'Network Error') {
                console.error('üåê –ü–æ–º–∏–ª–∫–∞ –∑\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º –≤ getProfile');
                throw new Error('–ü–æ–º–∏–ª–∫–∞ –∑\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º');
            }
            
            throw error;
        }
    },

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    async updateProfile(profileData) {
        try {
            const response = await instance.put('/users/profile/', profileData);
            return response.data;
        } catch (error) {
            throw error;
        }
    },

    // –ó–º—ñ–Ω–∞ –ø–∞—Ä–æ–ª—è
    async changePassword(passwordData) {
        try {
            const response = await instance.post('/users/change-password/', passwordData);
            return response.data;
        } catch (error) {
            throw error;
        }
    },

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (–¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)
    async getUsersList() {
        try {
            const response = await instance.get('/users/');
            return response.data;
        } catch (error) {
            throw error;
        }
    },

    // –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è/—Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)
    async toggleUserStatus(userId, isActive) {
        try {
            const response = await instance.patch(`/users/${userId}/toggle-status/`, {
                is_active: isActive
            });
            return response.data;
        } catch (error) {
            throw error;
        }
    }
};



